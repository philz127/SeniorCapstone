buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath 'com.backelite:android-variantSelector-gradle-plugin:1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.backelite.android.variantSelector'

repositories {
    maven { url 'https://dl.bintray.com/drummer-aidan/maven' }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    flavorDimensions rootProject.dimensionDefault

    defaultConfig {
        applicationId "com.quickblox.q_municate"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled = true
    }

    signingConfigs {
        debug {

        }
        release {
            storeFile file(property('prodStoreFile'))
            storePassword property('prodStorePassword')
            keyAlias property('prodKeyAlias')
            keyPassword property('prodKeyPassword')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            ext.enableCrashlytics = true
            signingConfig signingConfigs.release
            buildConfigField "String", "APP_ID", prodAppID
            buildConfigField "String", "AUTH_KEY", prodAuthKey
            buildConfigField "String", "AUTH_SECRET", prodAuthSecret
            buildConfigField "String", "ACCOUNT_KEY", prodAccountKey
            buildConfigField "String", "API_ENDPOINT", prodApiEndpoint
            buildConfigField "String", "CHAT_ENDPOINT", prodChatEndpoint
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", devFirebaseAuthProjectId
            resValue "string", "facebookAppId", prodFacebookAppID
            resValue "string", "sender_id", prodPushRegistrationAppID
            manifestPlaceholders = [fabricApiKey: prodFabricApiKey]
        }

        debug {
            debuggable true
            versionNameSuffix ' (debug)'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        changeApkFileName(variant)
    }

    productFlavors {

        standard {
            dimension rootProject.dimensionDefault
            buildConfigField "String", "APP_ID", devAppID
            buildConfigField "String", "AUTH_KEY", devAuthKey
            buildConfigField "String", "AUTH_SECRET", devAuthSecret
            buildConfigField "String", "API_ENDPOINT", devApiEndpoint
            buildConfigField "String", "CHAT_ENDPOINT", devChatEndpoint
            buildConfigField "String", "ACCOUNT_KEY", devAccountKey
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", devFirebaseAuthProjectId
            resValue "string", "facebookAppId", devFacebookAppID
            resValue "string", "sender_id", devPushRegistrationAppID
            manifestPlaceholders = [fabricApiKey: devFabricApiKey]
        }

        custom {
            dimension rootProject.dimensionDefault
            buildConfigField "String", "APP_ID", customAppID
            buildConfigField "String", "AUTH_KEY", customAuthKey
            buildConfigField "String", "AUTH_SECRET", customAuthSecret
            buildConfigField "String", "API_ENDPOINT", customApiEndpoint
            buildConfigField "String", "CHAT_ENDPOINT", customChatEndpoint
            buildConfigField "String", "ACCOUNT_KEY", customAccountKey
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", customFirebaseAuthProjectId
            resValue "string", "facebookAppId", customFacebookAppID
            resValue "string", "sender_id", customPushRegistrationAppID
            manifestPlaceholders = [fabricApiKey: customFabricApiKey]
        }
    }
}

dependencies {
    implementation project(':Q-municate_core')

    implementation "com.android.support:multidex:${rootProject.multiDexVersion}"
    implementation "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    implementation "com.android.support:design:${rootProject.supportVersion}"

    implementation "com.google.android.gms:play-services-base:${rootProject.googlePlayServicesVersion}"
    implementation "com.google.android.gms:play-services-maps:${rootProject.googlePlayServicesVersion}"
    implementation "com.google.android.gms:play-services-location:${rootProject.googlePlayServicesVersion}"
    implementation "com.google.android.gms:play-services-analytics:${rootProject.googlePlayServicesVersion}"

    implementation "com.firebase:firebase-jobdispatcher-with-gcm-dep:${rootProject.firebaseDispatcherVersion}"
    implementation "com.google.firebase:firebase-auth:${rootProject.firebaseAuthVersion}"
    implementation("com.firebaseui:firebase-ui-auth:${rootProject.firebaseUiAuthVersion}") {
        exclude group: 'com.google.android.gms'
    }

    implementation "com.nostra13.universalimageloader:universal-image-loader:${rootProject.universalImageLoaderVersion}"
    implementation 'com.flurry.android:analytics:6.2.0'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor "com.jakewharton:butterknife:${rootProject.butterknifeVersion}"
    implementation "com.jakewharton:butterknife:${rootProject.butterknifeVersion}"
    implementation "com.afollestad.material-dialogs:core:${rootProject.materialDialogsVersion}"

    implementation "com.github.orangegangsters:swipy:${rootProject.swipyRecyclerviewVersion}@aar"
    implementation "com.timehop.stickyheadersrecyclerview:library:${rootProject.stickylistheadersRecyclerViewVersion}@aar"
    implementation "com.rockerhieu.emojicon:library:${rootProject.emojiconVersion}"
    implementation "com.soundcloud.android:android-crop:${rootProject.cropVersion}@aar"
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }
    implementation project(path: ':q-municate_user_service')
    implementation project(path: ':q-municate_auth_service')
    implementation project(path: ':q-municate_user_cache')
}

def changeApkFileName(variant) {
    variant.outputs.each { output ->
        def newName = 'QMUN_Android_v.' + rootProject.versionName + '_c.' + rootProject.versionCode + '-' + variant.buildType.name + '.apk'
        output.outputFileName = newName
    }
}

apply plugin: 'com.google.gms.google-services'
